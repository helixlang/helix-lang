//===------------------------------------------ C++ ------------------------------------------====//
//                                                                                                //
//  Part of the Helix Project, under the Attribution 4.0 International license (CC BY 4.0).       //
//  You are allowed to use, modify, redistribute, and create derivative works, even for           //
//  commercial purposes, provided that you give appropriate credit, and indicate if changes       //
//   were made. For more information, please visit: https://creativecommons.org/licenses/by/4.0/  //
//                                                                                                //
//  SPDX-License-Identifier: CC-BY-4.0                                                            //
//  Copyright (c) 2024 (CC BY 4.0)                                                                //
//                                                                                                //
//====----------------------------------------------------------------------------------------====//

#ifndef __AST_EXPRESSIONS_DEF__
#define __AST_EXPRESSIONS_DEF__

#define EXPRS(MACRO)             \
    MACRO(LiteralExpr)           \
    MACRO(BinaryExpr)            \
    MACRO(UnaryExpr)             \
    MACRO(IdentExpr)             \
    MACRO(NamedArgumentExpr)     \
    MACRO(ArgumentExpr)          \
    MACRO(ArgumentListExpr)      \
    MACRO(GenericArgumentExpr)   \
    MACRO(GenericInvokeExpr)     \
    MACRO(GenericInvokePathExpr) \
    MACRO(ScopePathExpr)         \
    MACRO(DotPathExpr)           \
    MACRO(ArrayAccessExpr)       \
    MACRO(PathExpr)              \
    MACRO(FunctionCallExpr)      \
    MACRO(ArrayLiteralExpr)      \
    MACRO(TupleLiteralExpr)      \
    MACRO(SetLiteralExpr)        \
    MACRO(MapPairExpr)           \
    MACRO(MapLiteralExpr)        \
    MACRO(ObjInitExpr)           \
    MACRO(LambdaExpr)            \
    MACRO(TernaryExpr)           \
    MACRO(ParenthesizedExpr)     \
    MACRO(CastExpr)              \
    MACRO(InstOfExpr)            \
    MACRO(Type)

#endif  // __AST_EXPRESSIONS_DEF__