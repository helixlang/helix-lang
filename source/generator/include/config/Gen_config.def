//===------------------------------------------ C++ ------------------------------------------====//
//                                                                                                //
//  Part of the Helix Project, under the Attribution 4.0 International license (CC BY 4.0).       //
//  You are allowed to use, modify, redistribute, and create derivative works, even for           //
//  commercial purposes, provided that you give appropriate credit, and indicate if changes       //
//   were made. For more information, please visit: https://creativecommons.org/licenses/by/4.0/  //
//                                                                                                //
//  SPDX-License-Identifier: CC-BY-4.0                                                            //
//  Copyright (c) 2024 (CC BY 4.0)                                                                //
//                                                                                                //
//====----------------------------------------------------------------------------------------====//

#ifndef __CODEGEN_CONFIG_DEF__
#define __CODEGEN_CONFIG_DEF__

#define __CXIR_CODEGEN_BEGIN namespace generator::CXIR

#define __CXIR_CODEGEN_N generator::CXIR

#define CX_VISIT_IMPL(type) void __CXIR_CODEGEN_N::CXIR::visit(const __AST_NODE::type &node /* NOLINT */)

#define MAKE_CXIR_TOKEN(name, string) name,
#define MAKE_CXIR_TOKEN_PAIR(name, string) std::pair{name, string},

// The enum inside of the struct removes the naming conflict with the token classes.
#define GENERATE_CXIR_TOKENS_ENUM_AND_MAPPING                                    \
    __CXIR_CODEGEN_BEGIN {                                                       \
        enum cxir_tokens { CXX_TOKENS(MAKE_CXIR_TOKEN) };                        \
                                                                                 \
        constexpr token::Mapping<cxir_tokens, CXX_TOKENS_COUNT> cxir_tokens_map{ \
            {CXX_TOKENS(MAKE_CXIR_TOKEN_PAIR)}};                                 \
    }

#endif  // __CODEGEN_CONFIG_DEF__