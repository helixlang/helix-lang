class Node {
    pub let value: i32
    pub let next: *Node = &null

    // constructor for Node
    fn Node(self, value: i32) {
        self.value = value
    }
}

fn printReverseList(head: *Node) {
    if head->next != &null:
        printReverseList(head->next)

    print(f"{head->value} ")
}

fn main() -> i32 {
    // create a basic linked list containing: [1, 2, 3]
    let head   = Node(1)
    let second = Node(2)
    let third  = Node(3)

    // link the nodes
    head.next   = &second
    second.next = &third

    // print the list in reverse order
    print("linked list in reverse order: ")
    printReverseList(&head)

    return 0
}