interface Foo requires <U> {
    fn foo(self) -> U;
    static fn bar();

    let x: i32;
}

fn something() requires <T> if Foo::<int> in T {
    T::bar();
}

class Bar extend Foo::<int> {
    fn foo(self) -> int {
        return 0;
    }

    static fn bar() {
        print("Bar");
    }

    let x: i32 = 10;
}

fn main() -> i32 {
    something::<Bar>();
    return 0;
}

/*
----------- do not remove this, the script everting below this line to validate the test -----------
// START TEST

// END TEST
*/