// Basic interface with a generic
interface Foe requires <U> {
    fn poo(self) -> U;
}

// Interface without generics
interface Basic_Something {
    fn poo(self) -> i32;
}

// A class implementing Foe and Basic_Something
class Drinks extend Foe::<int>, Basic_Something {
    fn poo(self) -> int {
        return self.x;
    }

    static fn bar() {
        print("Drinks");
    }

    let x: i32 = 10;
}

fn main() -> i32 {
    // Test Foe and Basic_Something functionality
    let drink_instance = Drinks{};
    print(drink_instance.poo()); // Should print 10
    Drinks::bar(); // Should print "Drinks"
    return 0;
}

/*
--------- do not remove this comment, it is used by the test script to validate the output ---------
// START TEST
10
Drinks
// END TEST
*/
