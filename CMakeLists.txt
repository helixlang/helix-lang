# this is the build file for project helix-lang
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(helix-lang LANGUAGES CXX)

# target
add_executable(helix "")
set_target_properties(helix PROPERTIES OUTPUT_NAME "helix")
set_target_properties(helix PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/macosx/arm64/release")
target_compile_definitions(helix PRIVATE
    NDEBUG
)
target_compile_options(helix PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-target>
    $<$<COMPILE_LANGUAGE:CXX>:-target>
    $<$<COMPILE_LANGUAGE:C>:arm64-apple-macos14.5>
    $<$<COMPILE_LANGUAGE:CXX>:arm64-apple-macos14.5>
    $<$<COMPILE_LANGUAGE:C>:-isysroot>
    $<$<COMPILE_LANGUAGE:CXX>:-isysroot>
    $<$<COMPILE_LANGUAGE:C>:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk>
    $<$<COMPILE_LANGUAGE:CXX>:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(helix PRIVATE -W3)
else()
    target_compile_options(helix PRIVATE -Wall)
endif()
if(MSVC)
    target_compile_options(helix PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(helix PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(helix PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET helix PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreadedDLL")
endif()
target_link_options(helix PRIVATE
    -target
    arm64-apple-macos14.5
    -isysroot
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk
    -lz
)
target_sources(helix PRIVATE
    source/main.cc
    source/token/source/lexer.cc
    source/token/source/token.cc
    source/include/error/error.cc
    source/cli/cli.cc
    source/parser/ast/classes/nodes.cc
    source/parser/ast/classes/ast.cc
)

