# this is the build file for project helix-lang
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(helix-lang LANGUAGES CXX)

# target
add_executable(helix "")
set_target_properties(helix PROPERTIES OUTPUT_NAME "helix")
set_target_properties(helix PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/macosx/arm64/release")
target_include_directories(helix PRIVATE
    source
)
target_compile_definitions(helix PRIVATE
    NDEBUG
)
target_compile_options(helix PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-target>
    $<$<COMPILE_LANGUAGE:CXX>:-target>
    $<$<COMPILE_LANGUAGE:C>:arm64-apple-macos14.5>
    $<$<COMPILE_LANGUAGE:CXX>:arm64-apple-macos14.5>
    $<$<COMPILE_LANGUAGE:C>:-isysroot>
    $<$<COMPILE_LANGUAGE:CXX>:-isysroot>
    $<$<COMPILE_LANGUAGE:C>:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk>
    $<$<COMPILE_LANGUAGE:CXX>:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(helix PRIVATE -W3)
else()
    target_compile_options(helix PRIVATE -Wall)
endif()
set_target_properties(helix PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(helix PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(helix PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(helix PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(helix PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET helix PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreadedDLL")
endif()
target_link_options(helix PRIVATE
    -target
    arm64-apple-macos14.5
    -isysroot
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk
    -lz
)
target_sources(helix PRIVATE
    source/token/source/token_list.cc
    source/token/source/token.cc
    source/main.cc
    source/core/error/error.cc
    source/lexer/source/lexer.cc
    source/cli/source/cli.cc
    source/parser/ast/source/nodes.cc
    source/parser/ast/source/expr.cc
    source/parser/ast/source/ast.cc
    source/parser/ast/source/expr/literals.cc
    source/parser/preprocessor/source/preprocessor_import.cc
    source/parser/preprocessor/source/preprocessor.cc
    source/controllers/source/read_file.cc
    source/controllers/source/get_cwd.cc
    source/controllers/source/source_tree.cc
    source/controllers/source/resolve.cc
    source/token/types/mapping.hh
    source/token/include/token_list.hh
    source/token/include/generate.hh
    source/token/include/token.hh
    source/core/utils/josnify.hh
    source/core/utils/colors_ansi.hh
    source/core/error/error.hh
    source/lexer/include/lexer.hh
    source/cli/include/args.hh
    source/cli/include/cli.hh
    source/parser/cst/include/parser.hh
    source/parser/cst/include/nodes.hh
    source/parser/cst/include/cst.hh
    source/parser/ast/include/ast.hh
    source/parser/ast/include/context.hh
    source/parser/ast/include/parser.hh
    source/parser/ast/include/expr_nodes.hh
    source/parser/ast/include/nodes.hh
    source/parser/preprocessor/include/preprocessor.hh
    source/generator/include/py_emitter.hh
    source/generator/include/cxx_emitter.hh
    source/generator/include/rs_emitter.hh
    source/generator/include/llvm_emitter.hh
    source/controllers/include/file_system.hh
    source/compiler/api/compiler.hh
    source/toolchain/lexer.hh
    source/toolchain/ast.hh
    source/toolchain/parser.hh
    source/toolchain/codegen.hh
    source/toolchain/cst.hh
)

# target
add_executable(tests "")
set_target_properties(tests PROPERTIES OUTPUT_NAME "tests")
set_target_properties(tests PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/macosx/arm64/release")
target_include_directories(tests PRIVATE
    source
    tests/lib
)
target_compile_definitions(tests PRIVATE
    DEBUG
)
target_compile_options(tests PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-target>
    $<$<COMPILE_LANGUAGE:CXX>:-target>
    $<$<COMPILE_LANGUAGE:C>:arm64-apple-macos14.5>
    $<$<COMPILE_LANGUAGE:CXX>:arm64-apple-macos14.5>
    $<$<COMPILE_LANGUAGE:C>:-isysroot>
    $<$<COMPILE_LANGUAGE:CXX>:-isysroot>
    $<$<COMPILE_LANGUAGE:C>:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk>
    $<$<COMPILE_LANGUAGE:CXX>:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(tests PRIVATE -W3)
else()
    target_compile_options(tests PRIVATE -Wall)
endif()
set_target_properties(tests PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(tests PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(tests PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(tests PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(tests PRIVATE -Zi)
else()
    target_compile_options(tests PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET tests PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreadedDLL")
endif()
target_link_options(tests PRIVATE
    -target
    arm64-apple-macos14.5
    -isysroot
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk
    -lz
)
target_sources(tests PRIVATE
    tests/core/tokenize.cc
    tests/lib/catch2.cc
    source/token/source/token_list.cc
    source/token/source/token.cc
    source/core/error/error.cc
    source/lexer/source/lexer.cc
    source/cli/source/cli.cc
    source/parser/ast/source/nodes.cc
    source/parser/ast/source/expr.cc
    source/parser/ast/source/ast.cc
    source/parser/ast/source/expr/literals.cc
    source/parser/preprocessor/source/preprocessor_import.cc
    source/parser/preprocessor/source/preprocessor.cc
    source/controllers/source/read_file.cc
    source/controllers/source/get_cwd.cc
    source/controllers/source/source_tree.cc
    source/controllers/source/resolve.cc
    source/token/types/mapping.hh
    source/token/include/token_list.hh
    source/token/include/generate.hh
    source/token/include/token.hh
    source/core/utils/josnify.hh
    source/core/utils/colors_ansi.hh
    source/core/error/error.hh
    source/lexer/include/lexer.hh
    source/cli/include/args.hh
    source/cli/include/cli.hh
    source/parser/cst/include/parser.hh
    source/parser/cst/include/nodes.hh
    source/parser/cst/include/cst.hh
    source/parser/ast/include/ast.hh
    source/parser/ast/include/context.hh
    source/parser/ast/include/parser.hh
    source/parser/ast/include/expr_nodes.hh
    source/parser/ast/include/nodes.hh
    source/parser/preprocessor/include/preprocessor.hh
    source/generator/include/py_emitter.hh
    source/generator/include/cxx_emitter.hh
    source/generator/include/rs_emitter.hh
    source/generator/include/llvm_emitter.hh
    source/controllers/include/file_system.hh
    source/compiler/api/compiler.hh
    source/toolchain/lexer.hh
    source/toolchain/ast.hh
    source/toolchain/parser.hh
    source/toolchain/codegen.hh
    source/toolchain/cst.hh
)

