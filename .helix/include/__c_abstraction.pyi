import abc
from abc import ABC, abstractmethod

class c_interop_abstraction(ABC, metaclass=abc.ABCMeta):
    @abstractmethod
    def __import__(self, path: str, attr: str = ""): ...
    @abstractmethod
    def __create_compile_dir__(self): ...
    @abstractmethod
    def __remove_compiled_files__(self): ...
    @abstractmethod
    def __append_to_compiled__(self, path: str): ...
    @abstractmethod
    def __run_compile_command__(self, compiler: str, compiled_path: str, path: str): ...
    @abstractmethod
    def __compile_c_cpp__(self, path: str, compiler: str = "gcc"): ...
