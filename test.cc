#include "lib-helix/core/include/core.h"

#ifndef __HELIX_CORE_CXX__
#define __HELIX_CORE_CXX__
///*--- Helix ---*
///
///  Part of the Helix Project, under the Attribution 4.0 International license (CC BY 4.0).
///  You are allowed to use, modify, redistribute, and create derivative works, even for
///  commercial purposes, provided that you give appropriate credit, and indicate if changes
///  were made. For more information, please visit: https://creativecommons.org/licenses/by/4.0/
///
///  SPDX-License-Identifier: CC-BY-4.0
///  Copyright (c) 2024 (CC BY 4.0)
///
///  This file was generated by the Helix compiler, do not modify it directly.
///  Generated on: 1734324247 [unix-timestamp]
///
///*--- Helix ---*

#if __cplusplus < 202002L
static_assert(false, "helix requires c++20 or higher");
#endif


#endif


#define __$FILE_0__ "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"

#line 1 R"(__$FILE_0__)"

#ifndef _$Z__devolopment_helix_helix_lang_build_debug_x64_msvc_windows_pkgs_std_range_hlx_N_M

#define _$Z__devolopment_helix_helix_lang_build_debug_x64_msvc_windows_pkgs_std_range_hlx_N_M
 namespace
  helix
  ::
  _$Z__devolopment_helix_helix_lang_build_debug_x64_msvc_windows_pkgs_std_range_hlx_N
  {
  template
  <
  typename

#line 1 __$FILE_0__

#line 136

#line 136 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
self
  >
  concept

#line 136 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
RangeIncrementable
  =
  requires
  (

#line 136 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
self

#line 136 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$_1734324247169_1335
  ,

#line 138

#line 138 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
self

#line 138 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$_1734324247170_5582
  )
  {
  {

#line 137

#line 137 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
++
  $_1734324247169_1335
  }
  ->

#line 137 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
std
  ::

#line 137 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
traits
  ::

#line 137 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
convertible_to
  <

#line 137 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
self
  >

;   {
  $_1734324247169_1335

#line 138

#line 138 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
<
  $_1734324247170_5582
  }
  ->

#line 138 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
std
  ::

#line 138 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
traits
  ::

#line 138 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
convertible_to
  <

#line 138 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
bool
  >

;   }

;   template
  <
  typename

#line 142

#line 142 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  requires

#line 142 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
RangeIncrementable
  <

#line 142 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  class

#line 141

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  {
  private
  :

#line 143

#line 143 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 143 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first

;   private
  :

#line 144

#line 144 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 144 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last

;   private
  :

#line 145

#line 145 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 145 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
step

;   public
  :

#line 147

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  (

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first
  ,

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last
  ,

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
step
  =

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
i32
  (

#line 147 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
1
  )
  )
  {

;   (
  *
  this
  )
  .

#line 148

#line 148 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first

#line 148 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
=

#line 148 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first

;
;   (
  *
  this
  )
  .

#line 149

#line 149 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last

#line 149 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
=

#line 149 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last

;
;   (
  *
  this
  )
  .

#line 150

#line 150 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
step

#line 150 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
=

#line 150 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
step

;   }
  public
  :

#line 153

#line 153 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  (

#line 153 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 153 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last
  )
  {

;   (
  *
  this
  )
  .

#line 154

#line 154 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first

#line 154 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
=

#line 154 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  (
  )

;
;   (
  *
  this
  )
  .

#line 155

#line 155 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last

#line 155 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
=

#line 155 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last

;
;   (
  *
  this
  )
  .

#line 156

#line 156 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
step

#line 156 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
=

#line 156 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  (

#line 156 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
i32
  (

#line 156 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
1
  )
  )

;   }
  public
  :
  private
  :
  mutable

#line 159

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
helix
  ::

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
std
  ::

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$generator
  <

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$gen_state
  =

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$generator
  (
  )

;   public
  :
  inline
  auto

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$generator
  (
  )
  ->

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
helix
  ::

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
std
  ::

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$generator
  <

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  {

;   auto

#line 160

#line 160 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
current
  =
  (
  *
  this
  )
  .

#line 160 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first

;
;
;   while
  (

#line 162

#line 162 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
current

#line 162 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
<
  (
  *
  this
  )
  .

#line 162 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last
  )
  {
  co_yield

#line 163

#line 163 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
current

;
;
#line 164

#line 164 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
current

#line 164 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
+=
  (
  *
  this
  )
  .

#line 164 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
step

;
;   }
  }
  auto

#line 159

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
iter
  (
  )
  ->

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
helix
  ::

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
std
  ::

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$generator
  <

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  {
  return

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$generator
  (
  )

;   }
  auto

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
begin
  (
  )
  {
  return

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$gen_state
  .

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
begin
  (
  )

;   }
  auto

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
end
  (
  )
  {
  return

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$gen_state
  .

#line 159 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
end
  (
  )

;   }
  public
  :
  inline
  auto

#line 168

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$contains
  (

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
value
  )
  ->

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
bool
  {

;   return

#line 169

#line 169 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
value

#line 169 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
>=
  (
  *
  this
  )
  .

#line 169 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first

#line 169 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
&&

#line 169 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
value

#line 169 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
<
  (
  *
  this
  )
  .

#line 169 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last

;   }
  auto

#line 168

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
contains
  (

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
value
  )
  ->

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
bool
  {
  return

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
$contains
  (

#line 168 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
value
  )

;   }
  public
  :

#line 141

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
~

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  (
  )
  =

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
default

;   public
  :

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  (

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
const

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
&
  )
  =

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
default

;   public
  :

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
&

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
operator
  =
  (

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
const

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
&
  )
  =

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
default

;   public
  :

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  (

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
&
  )
  noexcept
  =

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
default

;   public
  :

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
&

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
operator
  =
  (

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
&
  )
  noexcept
  =

#line 141 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
default

;   }

;   template
  <
  typename

#line 174

#line 174 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  requires

#line 174 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
RangeIncrementable
  <

#line 174 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  auto

#line 173

#line 173 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
range
  (

#line 173 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 173 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last
  )
  ->

#line 173 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  <

#line 173 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  {

;   return

#line 175

#line 175 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  <

#line 175 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  (

#line 175 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last
  )

;   }
  template
  <
  typename

#line 179

#line 179 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  requires

#line 179 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
RangeIncrementable
  <

#line 179 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  auto

#line 178

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
range
  (

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first
  ,

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last
  ,

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
step
  =

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
i32
  (

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
1
  )
  )
  ->

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  <

#line 178 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  {

;   return

#line 180

#line 180 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
Range
  <

#line 180 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
T
  >
  (

#line 180 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
first
  ,

#line 180 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
last
  ,

#line 180 "Z:/devolopment/helix/helix-lang/build/debug/x64-msvc-windows/pkgs/std/range.hlx"
step
  )

;   }
  }

#endif

#define __$FILE_0__ "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"

#line 1 R"(__$FILE_0__)"

#ifndef _$Z__devolopment_helix_helix_lang_tests_palindrome_hlx_N_M

#define _$Z__devolopment_helix_helix_lang_tests_palindrome_hlx_N_M
 namespace
  helix
  ::
  _$Z__devolopment_helix_helix_lang_tests_palindrome_hlx_N
  {

#line 1 __$FILE_0__

#line 2

#line 2 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
using namespace _$Z__devolopment_helix_helix_lang_build_debug_x64_msvc_windows_pkgs_std_range_hlx_N;

;
;   auto

#line 4

#line 4 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
is_palindrome
  (

#line 4 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string

#line 4 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
str
  )
  ->

#line 4 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
bool
  {

;   if
  (

#line 5

#line 5 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
str
  .

#line 5 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
length
  (
  )

#line 5 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
%

#line 5 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i32
  (

#line 5 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
2
  )

#line 5 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
==

#line 5 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i32
  (

#line 5 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
0
  )
  )
  {
  return

#line 6

#line 6 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
false

;
;   }

;
#line 9

#line 9 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
usize

#line 9 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
count
  =

#line 9 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i32
  (

#line 9 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
2
  )

;
;
;   for
  (

#line 11

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
usize

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i
  :

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
range
  <

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
usize
  >
  (
  (

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
str
  .

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
length
  (
  )

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
/

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i32
  (

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
2
  )
  )

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
+

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i32
  (

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
1
  )
  ,
  (

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
str
  .

#line 11 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
length
  (
  )
  )
  )
  )
  {
  if
  (

#line 12

#line 12 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
str
  [

#line 12 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i
  ]

#line 12 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
!=

#line 12 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
str
  [
  (

#line 12 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
count

#line 12 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
-

#line 12 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i
  )
  ]
  )
  {
  return

#line 13

#line 13 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
false

;
;   }

;   (

#line 16

#line 16 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
++
  (

#line 16 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
count
  )
  )

;
;   }

;   return

#line 19

#line 19 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
true

;   }
  }
  auto

#line 22

#line 22 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
main
  (
  )
  ->

#line 22 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
i32
  {

;   using namespace helix; using namespace helix:: _$Z__devolopment_helix_helix_lang_tests_palindrome_hlx_N

;
;
#line 23

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
print
  (
  helix
  ::
  std
  ::
  stringf
  (

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"Is 'racecar' a palindrome? \\{\\}"
  )
  ,
  (
  (

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
is_palindrome
  (

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"racecar"
  )
  )
  )
  ?

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"true"
  )
  :

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 23 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"false"
  )
  )
  )
  )

;
;
#line 24

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
print
  (
  helix
  ::
  std
  ::
  stringf
  (

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"Is 'hello' a palindrome? \\{\\}"
  )
  ,
  (
  (

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
is_palindrome
  (

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"hello"
  )
  )
  )
  ?

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"true"
  )
  :

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 24 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"false"
  )
  )
  )
  )

;
;
#line 25

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
print
  (
  helix
  ::
  std
  ::
  stringf
  (

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"Is 'madam' a palindrome? \\{\\}"
  )
  ,
  (
  (

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
is_palindrome
  (

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"madam"
  )
  )
  )
  ?

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"true"
  )
  :

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 25 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"false"
  )
  )
  )
  )

;
;
#line 26

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
print
  (
  helix
  ::
  std
  ::
  stringf
  (

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"Is 'apple' a palindrome? \\{\\}"
  )
  ,
  (
  (

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
is_palindrome
  (

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"apple"
  )
  )
  )
  ?

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"true"
  )
  :

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
string
  (

#line 26 "Z:/devolopment/helix/helix-lang/tests/palindrome.hlx"
"false"
  )
  )
  )
  )

;   }

#endif