# This file was automatically generated by the Helix transpiler
# Do not modify this file, as it will be overwritten

# License: CC0 1.0 Universal
# SPDX-License-Identifier: CC0-1.0

from include.core import *

from include.core import __c_cpp_import__

test = __c_cpp_import__("test.cpp")


@hx__multi_method
def main():
    a: hx_int = hx_int(213)

    print(test.add(1, 2))
    try:
        a.__set__(123)
    except AttributeError:
        a = 123
        print(
            "WARN: \"a \" does not contain the attribute '__set__' falling back to default assignment."
        )

    print(a)
    try:
        a.__set__(a + 3)
    except AttributeError:
        a = a + 3
        print(
            "WARN: \"a \" does not contain the attribute '__set__' falling back to default assignment."
        )

    dumb(a)


@hx__multi_method
def dumb(a: hx_int):
    try:
        a.__set__(123)
    except AttributeError:
        a = 123
        print(
            "WARN: \"a \" does not contain the attribute '__set__' falling back to default assignment."
        )

    print(a)


if __name__ == "__main__":
    main()
